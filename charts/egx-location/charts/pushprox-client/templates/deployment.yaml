{{- if .Values.proxy.exposedServices }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pushprox-client.fullname" . }}
  labels:
{{ include "pushprox-client.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pushprox-client.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pushprox-client.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:

      {{- range .Values.proxy.exposedServices }}
      - name: {{ .namespace }}-{{ .name }}
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        args:
        - --proxy-url={{ required "proxy.serverUrl" $.Values.proxy.serverUrl }}
        - --fqdn={{ .name }}.{{ .namespace }}.svc.{{ $.Values.clusterDomain }}
        - --metrics-addr=
        # TODO(lig): how pass .port back to server?
        resources:
        {{- toYaml $.Values.resources | nindent 10 }}
      {{- end }}

      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}

{{- end }}
